[{"C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\index.js":"1","C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\App.jsx":"2","C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\User\\index.jsx":"3","C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\CreateUser\\index.jsx":"4","C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\common\\Modal\\index.jsx":"5","C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\UserInfo\\index.jsx":"6","C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\Users\\index.jsx":"7","C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\common\\Spinner\\index.jsx":"8","C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\hooks\\useLocalStorage.js":"9"},{"size":262,"mtime":1610452445453,"results":"10","hashOfConfig":"11"},{"size":487,"mtime":1610462301168,"results":"12","hashOfConfig":"11"},{"size":950,"mtime":1610459878178,"results":"13","hashOfConfig":"11"},{"size":535,"mtime":1610528620623,"results":"14","hashOfConfig":"11"},{"size":3232,"mtime":1610373094643,"results":"15","hashOfConfig":"11"},{"size":2179,"mtime":1610461947505,"results":"16","hashOfConfig":"11"},{"size":4204,"mtime":1610530296500,"results":"17","hashOfConfig":"11"},{"size":321,"mtime":1610460079655,"results":"18","hashOfConfig":"11"},{"size":625,"mtime":1610461656908,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1q30rqq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\index.js",[],["40","41"],"C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\App.jsx",[],"C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\User\\index.jsx",[],"C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\CreateUser\\index.jsx",[],"C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\common\\Modal\\index.jsx",[],"C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\UserInfo\\index.jsx",[],"C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\Users\\index.jsx",["42"],"import React, { useState, useEffect } from 'react';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\n\r\nimport User from '../User';\r\nimport CreateUser from '../CreateUser';\r\nimport Modal from '../common/Modal';\r\n\r\nimport styles from './Users.module.css';\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useLocalStorage('users', null);\r\n  const [edittingUser, setEdittingUser] = useState({});\r\n  const [newUsername, setNewUsername] = useState('');\r\n  const [usernamePlaceholder, setUsernamePlaceholder] = useState('Enter Username...');\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!users) {\r\n      fetch('https://api.github.com/users')\r\n        .then(res => res.json())\r\n        .then(users => setUsers(users.slice(0, 3)));\r\n    }\r\n  }, []);\r\n\r\n  const userDelete = (id) => {\r\n    setUsers(users.filter(user => user.id !== id));\r\n  }\r\n\r\n  const userEdit = (id) => {\r\n    setEdittingUser(users.find(user => id === user.id));\r\n    setModalIsOpen(true);\r\n    setModalType('edit');\r\n  }\r\n\r\n  const edittingValueChange = (e) => {\r\n    setEdittingUser((user) => {\r\n      return {\r\n        ...user,\r\n        login: e.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  const edittingModalSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newUsers = users.map(user => user.id === edittingUser.id ? !edittingUser.login ? user : edittingUser : user);\r\n\r\n    setUsers(newUsers);\r\n    setModalIsOpen(false);\r\n  }\r\n\r\n  const edittingUserTypeChange = (e) => {\r\n    setEdittingUser((user) => {\r\n      return {\r\n        ...user,\r\n        type: e.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  const edittingUserAvatarChange = (e) => {\r\n    setEdittingUser((user) => {\r\n      return {\r\n        ...user,\r\n        avatar_url: e.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  const newUsernameChange = (e) => {\r\n    setNewUsername(e.target.value);\r\n    setUsernamePlaceholder('Enter Username...');\r\n  }\r\n\r\n  const newUserSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newUsername.trim()) {\r\n      fetch(`https://api.github.com/users/${newUsername}`)\r\n        .then(res => {\r\n          if (!res.ok) {\r\n            throw new Error(`Could not fetch, received ${res.status}`);\r\n          }\r\n\r\n          return res.json();\r\n        })\r\n        .then(user => {\r\n          let checkedUsers = [];\r\n\r\n          if(users) {\r\n            checkedUsers = users.filter(item => {\r\n              if (item.login === user.login) {\r\n                return 0;\r\n              }\r\n  \r\n              return item;\r\n            });\r\n          }\r\n\r\n          setUsers([user, ...checkedUsers]);\r\n          setNewUsername('');\r\n          setModalIsOpen(false);\r\n        })\r\n        .catch(() => {\r\n          setUsernamePlaceholder('User is not found');\r\n          setNewUsername('');\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.users}>\r\n        <CreateUser\r\n          userCreate={() => {\r\n            setModalType('create');\r\n            setModalIsOpen(true);\r\n          }}\r\n          deleteAllUsers={() => setUsers(null)}\r\n        />\r\n\r\n        {users ? users.map(user => {\r\n          if (user) {\r\n            return (\r\n              <User\r\n                key={user.id}\r\n                id={user.id}\r\n                name={user.login}\r\n                type={user.type}\r\n                avatarUrl={user.avatar_url}\r\n                userDelete={userDelete}\r\n                userEdit={userEdit}\r\n              />\r\n            );\r\n          }\r\n\r\n          return null;\r\n        }) : null}\r\n      </div>\r\n\r\n      <Modal\r\n        modalIsOpen={modalIsOpen}\r\n        modalType={modalType}\r\n        modalClose={() => setModalIsOpen(false)}\r\n\r\n        edittingUser={edittingUser}\r\n        edittingValueChange={edittingValueChange}\r\n        edittingModalSubmit={edittingModalSubmit}\r\n        edittingUserTypeChange={edittingUserTypeChange}\r\n        edittingUserAvatarChange={edittingUserAvatarChange}\r\n\r\n        newUsername={newUsername}\r\n        usernamePlaceholder={usernamePlaceholder}\r\n        newUsernameChange={newUsernameChange}\r\n        newUserSubmit={newUserSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\components\\common\\Spinner\\index.jsx",[],"C:\\Users\\User\\Desktop\\react\\github-users-api\\src\\hooks\\useLocalStorage.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":24,"column":6,"nodeType":"49","endLine":24,"endColumn":8,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setUsers' and 'users'. Either include them or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [setUsers, users]",{"range":"56","text":"57"},[851,853],"[setUsers, users]"]